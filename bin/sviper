#!/usr/bin/env python

from optparse import OptionParser
from os import system
import commands

parser = OptionParser()
parser.add_option("-n", 	dest="n",	default="1",	help="Number of cores")
parser.add_option("-N", 	dest="N",	default="1",	help="Ensure that all cores are on one machine")
parser.add_option("-t", 	dest="t",	default="1-00:00",help="Runtime in D-HH:MM")
parser.add_option("-p",	dest="p",	default="par4.q",help="Partition to submit to")
parser.add_option("--mem", 	dest="mem",	default="10000",help="Memory pool for all cores (see also --mem-per-cpu)")
parser.add_option("-o", 	dest="o",	default="slurm_%j.out",help="File to which STDOUT will be written")
parser.add_option("-e", 	dest="e",	default="",help="File to which STDERR will be written")
parser.add_option("--mail-type",dest="mail_type",default="END",help="Type of email notification- BEGIN,END,FAIL,ALL")
parser.add_option("--mail-user",dest="mail_user",default="lahat.albert@gmail.com",help="Email to which notifications will be sent")
(options, args) = parser.parse_args()

if options.e=='':err=options.o.replace('.out','.err')
else: err=options.e
protocol,command = args
header = '#!/bin/bash\n'
header += '#SBATCH -n '+options.n +'\n'
header += '#SBATCH -N '+options.N +'\n'
header += '#SBATCH -t '+options.t +'\n'
header += '#SBATCH -p '+options.p +'\n'
header += '#SBATCH --mem='+options.mem +'\n'
header += '#SBATCH -o '+options.o +'\n'
header += '#SBATCH -e '+err +'\n'
header += '#SBATCH --mail-type='+options.mail_type +'\n'
header += '#SBATCH --mail-user='+options.mail_user +'\n'

fname = '.tmp_{}_{}.sh'.format(protocol,command)
status, output = commands.getstatusoutput(' '.join(["visee",protocol, command]))
header +=  output + '\n'
#header += 'rm ' + fname
f = open(fname,'w')
f.write(header)
f.close()
print header
system('sbatch '+fname)
